---
layout: handbook-page-toc
title: "Monitor:Observability Group"
description: "The Observability group is responsible for the Observability of the DevOps lifecycle."
---

## On this page

{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}


## Monitor:Observability

The **Monitor:Observability** group at GitLab is responsible for building tools that enable DevOps teams to respond to, triage and remediate errors and IT alerts for the systems and applications they maintain.

Based on the [recent Opstrace acquisition](https://about.gitlab.com/press/releases/2021-12-14-gitlab-acquires-opstrace-to-expand-its-devops-platform-with-open-source-observability-solution.html), we aim to provide a streamlined Operations experience within GitLab that enables the individuals who write the code, to maintain it at the same time.


## Goals

Our primary goals right now are to deliver a set of 3 Integration Milestones:

- [Milestone 1](https://gitlab.com/groups/gitlab-org/opstrace/-/epics/3): Migrating from GitHub => GitLab, Planning Integrated Authentication, Jaeger Tracing
- [Milestone 2](https://gitlab.com/groups/gitlab-org/opstrace/-/epics/11): Initial SaaS Infrastructure with Integrated Auth
- [Milestone 3](https://gitlab.com/groups/gitlab-org/opstrace/-/epics/19): Production SaaS platform, Alpha Self-hosted Opstrace

## Team Organization

### Async Standups

We have Geekbot standups on Weds and retrospectives on Fridays. We use these async standups to communicate what we have accomplished, any current blockers and what we plan to work on next.

### Meetings

- Team Leadership Meeting: This weekly meeting is focused on aligning the EM, PM, Principal Engineer, Developer Advocate on cross-functional objectives. Goals are set and weekly status is communicated.

- Bi-monthly social hour: This meeting is non-work related and helps team socialize and get to know each other better.

- Team member coffee chats: Each team member should schedule a coffee chat with all other team members rough every 4-6 weeks. Feel free to discuss work or non-work topics. If timezones are an issue find another way to connect, such as a async slack thread to checkin. The goal is to get to know your other team members on a 1:1 basis.

### Communication

We use several Slack channels to organize ourselves:

- Primary channel: [#g_observability](https://gitlab.slack.com/archives/C02Q93U8J07)
- Standup channel: [#g_observability_standup](https://gitlab.slack.com/archives/C02VAHG10HW)
- Social channel: [#g_observability_random](https://gitlab.slack.com/archives/C02QLQUB0JZ)

### How we do Planning

Currently, during our initial phase, we are using a 2 month milestone cadence.
All work is organized into Epics, sub-epics, and assigned to the relevant Milestone.

#### Our process

- Two weeks before the beginning of the Milestone, the EM and PM meet to groom Epics, Issues, and Milestones.
- Milestone goals are defined and objectives are broken up into relevant Epics, sub-epics, and issues.
- Sometimes DRIs and supporters are assigned to epics to clarify responsibilities and ownership.
- Throughout the Milestone we analyze progress and reprioritize as needed.

### How to find something to work on

Normally at the beginning of the Milestone the EM will discuss an overview of the work and what relevant areas you will focus on. Sometimes issues will already be assigned to you before the Milestone begins.

If you are ever looking for additional issues to work on:

1. Look in the current [Milestone](https://gitlab.com/gitlab-org/opstrace/opstrace/-/milestones)
1. Identify an issue in the unstarted column that are open and unassigned.
1. Assign yourself to the issue.
1. If the scope or description are unclear, connect with the EM and or PM for clarification or (if feeling confident) groom the issue yourself and proceed.
1. Begin working on the issue.
1. Once you are done with the issue, make sure any relevant MRs are linked and close the issue.
1. Repeat.

## Team members

<%= direct_team(manager_role: 'Engineering Manager, Monitor:Observability') %>

## Stable counterparts

<%= stable_counterparts(role_regexp: /(?<!:)Monitor(?!:Respond)/, direct_manager_role: 'Engineering Manager, Monitor:Observability') %>
