---
layout: handbook-page-toc
title: "Authorization Group"
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

### Govern:Authorization
{: #welcome}

#### Security vulnerability issues

We closely watch new security vulnerability issues and schedule them as quickly as possible based on their [due date](/handbook/security/#due-date-on-security-issues). For planning security issues we use [the (filtered) milestone planning issue board](https://gitlab.com/gitlab-org/gitlab/-/boards/4260654?label_name%5B%5D=devops%3A%3Amanage&label_name%5B%5D=group%3A%3Aauthentication%20and%20authorization&label_name%5B%5D=bug%3A%3Avulnerability). We expect all team members to be able to resolve security issues following the [security release process](https://gitlab.com/gitlab-org/release/docs/-/blob/master/general/security/developer.md#security-releases-critical-non-critical-as-a-developer).

#### Code Review

Because this group works on components of the application that have a [far-reaching impact](/handbook/engineering/development/#reducing-the-impact-of-far-reaching-work), we take these extra steps in order to reduce our risk of a production incident:

1. Our team's merge requests should be assigned to another Authorization team member for first review in order to build more institutional knowledge across the team. This review should be done as a [reviewer](https://docs.gitlab.com/ee/development/code_review.html#the-responsibility-of-the-reviewer). The Auth approval counts as the approval matching the role of the Auth Reviewer, e.g. having a Backend Review from Auth counts as a Backend Review. Once approved, the Auth Reviewer should request a review from a Maintainer from the appropriate [maintainer category](https://docs.gitlab.com/ee/development/code_review.html#approval-guidelines).
1. Auth merge requests will include a comment that needs answered before merging, "Should this be behind a feature flag?" This is an effort to remind engineers about feature flag usage, but also to challenge reasoning as to why changes do not need to be behind a feature flag.

### Meetings

All meetings and 1-1's should have an agenda prepared in advance. If this is not the case, you are not obligated to attend the meeting. Confirm if the meeting should be canceled if there is not an agenda by the start time of the meeting.

### Group Members

Authorization group members who are part of the [Authorization group](https://gitlab.com/groups/gitlab-org/manage/authentication-and-authorization/) can be `@` mentioned on GitLab with `@gitlab-org/manage/authorization`.

The following people are permanent members of the group:

<%= stable_counterparts(role_regexp: /Govern:Authorization/) %>

### Links and resources
{: #links}

<%= partial("handbook/engineering/development/dev/manage/shared_links.erb") %>
* Our Slack channels
  * Govern:Authorization [#g_manage_auth](https://gitlab.slack.com/archives/CLM1D8QR0)
