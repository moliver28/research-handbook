Here are the activities done by the engineering manager throughout the course of a milestone.

_Note_: These dates are based on the current milestone cycle, which has a release [every month](/handbook/engineering/releases/). At the end of 2023 we will be switching the key dates of this cycle.

- 1st of the Month: A new [planning issue](https://gitlab.com/gitlab-org/create-stage/-/issues/?sort=created_date&state=opened&label_name%5B%5D=group%3A%3Acode%20review&label_name%5B%5D=Planning%20Issue) is automatically created for the next milestone. Create a thread for **Backend** and tag the backend team to get ideas for issues to include in the upcoming milestone planning.
- 10th: Move any issues that still have the `workflow::ready for development` label to the next milestone because it is likely it will not make the current milestone if it has not been started yet. 
- 10th: Make sure we have a capacity estimate for the next milestone. Check with team members to make sure all PTO has been entered. Add the capacity estimate to the planning issue.
- 14th: Move any issues that have the `workflow::in dev` label to the next milestone because if they are still in progress it is likely they will not make the current milestone.
- 15th: Have a planning meeting with the PM for Code Review to prioritize and pick issues for the milestone that fit within the available capacity.
- 17th: Label all issues with the `Deliverable` and `workflow::ready for development` labels.
- 17th: Assign issues to team members based on capacity.
- 17th: Send emails to team members with their current issue board.
- 18th: Move all open issues to the next milestone.
- 20th: Find issues to investigate as part of the [planning / backlog refinement process](/handbook/engineering/development/dev/create/code-review/backend/#planning). Create a new issue using the [backlog refinement template](https://gitlab.com/gitlab-com/create-stage/code-review-be/-/issues/new?issuable_template=backlog_refinement).
- 20th: Calculate the percentage breakdown of features, bugs, and maintenance and add it to the current planning issue.