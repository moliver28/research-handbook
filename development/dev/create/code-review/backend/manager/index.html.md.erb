---
layout: handbook-page-toc
title: "Create:Code Review BE Engineering Manager Responsibilities"
description: A list of responsibilities and resources for the Create:Code Review BE Engineering Manager
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

The [Backend Engineering Manager role at GitLab](https://handbook.gitlab.com/job-families/engineering/backend-engineer/#backend-engineering-manager) is an exciting and dynamic position that encompasses a wide range of responsibilities. In addition to leading and managing a team of talented engineers, the role involves overseeing projects from start to finish, making sure everything runs smoothly and meets high standards. As an engineering manager, you'll also have the opportunity to shape the team by actively participating in recruiting and hiring. One of the key aspects of the role is setting ambitious goals and measuring progress through OKRs (Objectives and Key Results), providing a clear roadmap for success. Moreover, fostering collaboration between different departments and teams is vital to ensure a seamless and efficient workflow. It's a multifaceted role that combines the best of leadership, project management, and team building, making each day full of diverse and engaging challenges.

This page will capture some of the responsibilities and resources for the Create:Code Review Backend Engineering Manager.

## People Managemeent

### Talent Assessments

Talent assessments happen [on a regular basis](/handbook/people-group/calendars/manager-calendar/).

## Milestone Planning

### Milestone Schedule

<%= partial("handbook/engineering/development/dev/create/code-review/backend/manager/milestone-schedule.erb") %>

### Capacity planning

<%= partial("handbook/engineering/development/dev/create/capacity_planning.erb") %>

### Availability

Approximately 5-10 business days before the start of a new release, the EM will begin determining how "available" the team will be. Some of the things that will be taken into account when determining availability are:

* Upcoming training
* Upcoming time off / holidays
* Upcoming on-call slots
* Potential time spent on another teams deliverables

Availability is a percentage calculated by _(work days available / work days in release) * 100_.

All individual contributors start with a "weight budget" of 7, meaning they are capable (based on historical data) of completing a maximum number of issues worth 7 weight points total. Then, based on their availability percentage, weight budgets are reduced individually. For example, if you are 70% available, your weight budget becomes 5.

Product will prioritize issues based on the teams total weight budget. 

### Kickoff emails

Once availability has been determined, weights have been assigned, and the PM/EM finalize a list of prioritized issues for the upcoming release, kickoff emails will be sent. The intent of this email is to notify you of the work we intend to assign for the upcoming release. This email will be sent before the release begins. The kickoff email will include:

* Your availability, weight budget, and how it was calculated
* A list of the issues you will most probably be assigned as an individual
* A reasoning behind why you have been assigned more than your weight budget, if applicable\

Emails get sent to each individual contributor on the team in order to give a heads-up about the upcoming issues in the milestone and what the assignments will be.

## Project Management

### Service Level Objectives Monitoring

The Engineering Manager will take proactive steps to avoid having reported bugs to go past the target duration defined in [Severity SLOs](https://about.gitlab.com/handbook/engineering/quality/issue-triage/#severity-slos).

The [Bug Triage Board](https://gitlab.com/groups/gitlab-org/-/boards/2546239) can be used to browse them together in one board.

### Priority Issues

There are some classifications of issues that need immediate attention. These could be reliability, security, or high-priority issues. The Engineering Manager needs to watch for these issues on a regular basis, typically multiple times per week.

The [Code Review Priority Issue Board](https://gitlab.com/groups/gitlab-org/-/boards/4778535) is a way to see all these issues in one place.