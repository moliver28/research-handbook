These are the broad definition for each of the weights values. We don't use a Fibonnacci-based progression but we do try to split up large issues as we understand they are by definition less accurate predictions.

When issues are Frontend only, we use the Weight feature of Issues.

When issues are both Frontend and Backend we use specific labels to support both weights in the same issue: `~frontend-weight::1` through `~frontend-weight::8`.

| Weight | Description  |
| --- | --- | --- |
| 1: Trivial | The problem is very well understood, no extra investigation is required, the exact solution is already known and just needs to be implemented, no surprises are expected, and no coordination with other teams or people is required. |
| 2: Small | The problem is well understood and a solution is outlined, but a little bit of extra investigation will probably still be required to realize the solution. |
| 3: Medium | Features that are well understood and relatively straightforward. Bugs that are relatively poorly understood and may not yet have a suggested solution. |
| 4: Medium | Features that are well understood and relatively straightforward but still need a good deal of work. Bugs that are relatively poorly understood and may not yet have a suggested solution. Includes some tasks that might be hard to test. |
| 5: Large | Features that are well understood, but known to be hard. Bugs that are very poorly understood, and will not have a suggested solution. |
| 8: Very large | Very large features that usually require the dedication of a FE for the full length of the milestone. â€” Very rare, usually split into smaller issues |