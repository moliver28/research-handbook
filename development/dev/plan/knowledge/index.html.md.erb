---
layout: handbook-page-toc
title: Plan:Knowledge Engineering Team
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## Plan:Knowledge team

The Plan:Knowledge team works on both the backend and frontend parts of
GitLab's [Knowledge] categories in the [Plan stage].

For more details about the vision for this area of the product, see the
[Plan stage] page.

[Knowledge]: /handbook/product/categories/#knowledge-group
[Plan stage]: /direction/plan/

### Team members

<%= direct_team(manager_role: 'Senior Manager, Engineering, Plan', role_regexp: /[,&] (Plan:Knowledge)/) %>

### Stable counterparts

<%= stable_counterparts(role_regexp: /[,&] (Plan(?!:)|Plan:Knowledge)/, direct_manager_role: 'Senior Manager, Engineering, Plan') %>

### Hiring chart

Check out our [jobs page](/jobs/) for current openings.

## Work

### Picking something to work on

The team [build board](https://gitlab.com/groups/gitlab-org/-/boards/5454834?milestone_title=Upcoming&label_name[]=group%3A%3Aknowledge) always shows
work targeting the upcoming release, organized into workflow columns. The ~"workflow::ready for development" column is ordered by priority.

The following labels are added by the Engineering Manager at the start of the milestone and communicate the priority of the issue to stakeholders:
* The ~Deliverable label indicates that we have committed to customers that we will deliver this item in the current milestone. 
* The ~Stretch label indicates that we have not committed to deliver the item but will attempt to make progress on it.

It's OK not to take the top item if you are not confident you can solve it, but please post in #s_plan or #g_knowledge if that's the case, as this
probably means the issue should be better specified.

### Capacity Planning

<%= partial("handbook/engineering/development/dev/plan/capacity_planning") %>

Typically, 3-month rolling average is a good indicator of the team's capacity. Knowledge is a new team and determining capacity will be difficult at the beginning without clear historical data.

The PM and EM will work to fit ~Deliverable issues into no more than 75% of the team's capacity and allocate the rest to ~Stretch issues.

### Use of Labels

Proper labelling of issues helps with the classification, traceability and quantification of work the team can and is doing. Some labels
are essential. The table below describes these and gives the reason why.

| Label | Use | Handbook Guidance | DRI |
|---    | --- | ---               | --- |
| ~workflow::* | Communicates the current workflow state of an issue. Important for understanding progress & quantifying risk during the course of a milestone. | [Updating Issues Throughout Development](https://about.gitlab.com/handbook/engineering/workflow/#updating-issues-throughout-development) | Engineer |
| ~type::* | Communicates the type of work being done. Used to quantify and report the split of work to roles inside and outside GitLab. | [Work Type Classification](https://about.gitlab.com/handbook/engineering/metrics/#work-type-classification) | |
| ~Deliverable/~Stretch | ~Deliverable communicates to customers and stakeholders that we intend to deliver an issue within the assigned milestone. ~Stretch indicates that it might be started during the milestone but is not expected to complete. | [Release Scoping Labels](https://docs.gitlab.com/ee/development/labels/#release-scoping-labels) | Engineering Manager |

### Dashboards

<%= partial "handbook/engineering/metrics/partials/_cross_functional_dashboard.erb", locals: { filter_value: "Knowledge" } %>

More detail is available on our [metrics page].

#### Application Performance

Additional dashboards are available in Grafana that show application performance of parts of the application for which the team is responsible.

* [Stage-Group Dashboard] (including 28-day Error Budget)
* [Error Budget Detail]

[metrics page]: https://about.gitlab.com/handbook/engineering/metrics/dev/plan/knowledge/#mr-types-dashboard
[Work Type Classification]: https://about.gitlab.com/handbook/engineering/metrics/#work-type-classification
[Stage-Group Dashboard]: https://dashboards.gitlab.net/d/stage-groups-knowledge/stage-groups-knowledge-group-dashboard?orgId=1
[Error Budget Detail]: https://dashboards.gitlab.net/d/stage-groups-detail-knowledge/stage-groups-knowledge-group-error-budget-detail?orgId=1

## Useful links

<%= partial("handbook/engineering/development/dev/plan/useful_links", locals: { board: { name: 'Plan:Knowledge', url: 'https://gitlab.com/groups/gitlab-org/-/boards/1569369?scope=all&utf8=%E2%9C%93&state=opened&label_name[]=group%3A%3Aknowledge' }}) %>
