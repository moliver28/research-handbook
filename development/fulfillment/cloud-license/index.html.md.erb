---
layout: handbook-page-toc
title: Cloud License Management
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

The purpose of this page is to document our longer term plans with Cloud Licensing, Renewals, and Quarterly Co-Terms. This is a work in progress, you can follow along with the active development in this epic: https://gitlab.com/groups/gitlab-org/-/epics/5140

# Summary

Managing renewals, true-ups, and general licensing of a self-managed GitLab instance can be painful. Both for a customer who has to put in extra effort to manually manage license keys, and for GitLab where we lack visibility and transparency into a customer's utilization limiting our ability to provide exceptional support. To solve this problem we're going to roll out a new system we're calling "Cloud License Management". 

We will be deprecating license keys, in favor of a bi-directional activation ID containing hashed, dynamic license information about their user count, dates for last synced and expiry, whether or not this instance ID has ever had a trial and Plan that can be synced automatically with our license server (or manually if the customer instance is air-gapped). 

Benefits of this system:

1. Customers receive the latest security updates which GitLab can either simply warn you about or you can configure your instance to allow GitLab to patch these updates automatically for you. This is done using the version number.
1. Automatic and button click subscription upgrades and system updates.
1. Fair, usage-based billing based off real-time user counts, eliminating historical True-ups. 
1. This also makes it easier for GitLab to implement flexible billing models depending on specific customer needs/requirements.
1. Improved understanding of license utilization to enable our teams to more effectively support customers
1. Further visibility in usage providing us the required data to improve our sales efficiency

## Customer Experience

### Connected Customers

1. Customer requirements tracked [here](https://gitlab.com/groups/gitlab-org/-/epics/5140#connected-customers) 
1. User enters purchase flow. Entry points: 
     1. https://customers.gitlab.com/plans
     1. https://about.gitlab.com/pricing/
     1. by selecting `Buy License` on the `admin/license` page of their SM instance
1. Upon completing the new subscription purchase flow, the user will receive:
     1. a confirmation message which provides the license activation code (with copy to clipboard feature)
     1. an email containing the activation code and directions for activating within their instance
1. User navigates back to their instance and enters `admin/license` page, enters the activation code and selects the `sync` button to connect the instance to GitLab
1. A congratulations message appears and the license page is updated with information related to the subscription 
1. A series of CTAs to allow for in-app purchasing (add users, upgrade tier, etc.) are now available on the license page
1. In order to limit subscription management tasks required of the customer, we will automate:
     1. **User overages**. Quarterly, we will reconcile the actual usage against subscribed user count and automatically bill for and provision user overages via the [Quarterly coterms](https://gitlab.com/groups/gitlab-org/-/epics/5140#quarterly-coterms) process
     1. **Renewals**. The purchased subscription is set to autorenew by default
1. There will be an in-app option to cancel the subscription within [x] days of subscription expiration

### Non-connected Customers

For customers who have received a contract-level exception that has been approved, we will enable a mechanism for self-reporting. Our legacy system will remain in service and can continue to support these customers but we will likely migrate to an improved system to handle these exceptions. _Details tbd._

## Quarterly Coterms

As a replacement to our annual true-up process, we're implementing a solution to charge customers for add on seats once per quarter, that charge will be prorated and co-terming with their existing subscription term. More details can be found on the [Pricing and Packaging Handbook page](https://gitlab-com.gitlab.io/packaging-and-pricing/pricing-handbook/handbook/quarterly_coterms/), and [in this epic](https://gitlab.com/groups/gitlab-org/-/epics/2747). Although technically Cloud License and Quarterly Co-Terms could roll out independent of each other it's recommended to combine the rollout and announcement of these changes:

* Cloud License offers clear value to the customer when coupled with Quarterly Coterms. Releasing co-terms without license sync requirements will make it harder to transition/migrate customers to license sync - “what’s in it for me?”
* This approach simplifies messaging, go-to-market, and sales enablement. 
* It allows for a "clean break" to the new modernized system, especially if we require the customer to be on new terms to activate either. 



## Iterations

### [v1 Deliver Cloud License management MVP](https://gitlab.com/groups/gitlab-org/-/epics/1878) - March 2021

The goal for our first iteration is to enable the base functionality required to activate a cloud license (including related requirements) and begin to roll this out to new customers. 

1. Cloud License Activation (_[requirements](https://gitlab.com/groups/gitlab-org/-/epics/5140#cloud-license-sync)_)
1. Quarterly coterms enabled (_[requirements](https://gitlab.com/groups/gitlab-org/-/epics/5140#quarterly-coterms)_)
1. Autorenewal enabled
1. Launching first for new customers only
1. Available for deals sold via sales-assisted and self-service purchases via customers.gitlab.com
1. Will not be available to partner deals


### [v2 Deliver Cloud License management gaps](https://gitlab.com/groups/gitlab-org/-/epics/4628) - FY22Q1

The goal for our second iteration is to resolve any issues from the MVC, close any gaps identified as we roll out to new customers, and begin to migrate existing customers at renewal. 

1. Migrate existing customers at renewal
1. Partner deals


### [v3 Deliver improved subscription management tools](https://gitlab.com/groups/gitlab-org/-/epics/4629) - FY22Q2

The final iteration could easily break down into many smaller iterations as we improve the system. The overarching goal is to provide improved tools for customers to track, manage and report on subscriptions and licenses. 

1. Using usage data, provide customers with historical usage, including graphs and downloads
1. Using usage data, provide customers with usage forecasts
1. Provide in-app ability to purchase without having to leave the application
1. Provide in-app information related to subscription and even sales person _(where desired and spec’d by sales, for example, for all deals that fit “this criteria”, show the AE Name and email address in the customer’s subscription dashboard.)_
1. Adapt license model to allow for tracking user counts and identification of multiple instances (ex. production instance vs. staging)
1. Automatically deliver security updates



## Project Launch Timeline (v1)

This is a cross-functional list of milestones covering development, sales enablement, marketing and support.

|Action # | Description | DRI | Target Date | Status | Last Status Date |
|:---: | --- |----|----|----|:---:|
|1 |[Completion of CloudLicense MVC](https://gitlab.com/groups/gitlab-org/-/epics/1878)|----|----|----|---|
|2 |[Completion of Quarterly CoTerms](https://gitlab.com/groups/gitlab-org/-/epics/2747)|----|----|----|---|
|3 |Finance & Enterprise Apps Readiness|----|----|----|---|
|4 |Comms Readiness (blogpost, email, in-app banners)|----|----|----|---|
|5 |Sales Enablement Materials|----|----|----|---|
|6 |Channel Sales Annoucement|----|----|----|---|
|7 |----|----|----|----|---|
|8 | --- |----|----|----|---|
|9 | --- |----|----|----|---|
|10 | --- |----|----|----|---|


## Sales Enablement (to be filled in by Monica Jacob)

1. [ ] Collateral: handbook and training systems updates
1. [ ] Slide deck walk-through of changes including messaging
1. [ ] Recorded video walk-through of changes including messaging
1. [ ] AMA with the project team


## Communication Plan (to be filled in by Saumya)

1. Blog post - _is this needed?_
1. Email campaigns
1. In-app messaging


## Finance & Legal Considerations

1. The [Quarterly Coterms process](https://gitlab.com/groups/gitlab-org/-/epics/5140#quarterly-coterms) will be reviewed and sign-off by the Finance team
1. Charging for user overages via Quarterly Coterms requires customers to sign updated legal terms
1. Legal advises that we do not migrate current customers onto the new License Model without having them sign the updated legal terms

## Known Challenges

Please see this section in the Epic where we're tracking known challenges: https://gitlab.com/groups/gitlab-org/-/epics/5140#known-challenges


## Migration process

As a recommendation from our legal team, we anticipate migrating current customers to the new License Management system upon renewal.

During the renewal process we will highlight the need to upgrade the customers self-managed instance to the appropriate version (via sales, email campaigns and as messaging during the purchase flow). 

When the customer completes the renewal purchase, they will receive an activation code as described in the [customer experience](https://gitlab.com/groups/gitlab-org/-/epics/5140#customer-experience) section.

The only requirement to start using the new License Management system beyond upgrading the instance to the required version is to activate the license key. 

## Product Requirements

### Cloud License Sync

1. Create a bidirectional connection from a customer's self-managed instance to CustomersDot via license activation
1. When a new self-managed subscription is purchased (sales-assisted or self-service), instead of generating a license file, an activation code will instead be generated
     1. The activation code will be immediately presented to customers at the success message for self-service purchases
     1. The activation code will be emailed to the email address related to the customer contact who made the purchase
1. Customers will enter the activation code in their instance and select an action to `sync` the instance with GitLab
1. Once synced, the customer instance must remain connected to the internet.
1. All future purchase activities will be automatically provisioned without manual syncing required
1. The customer instance 

### Quarterly Coterms

1. The Quarterly Coterms process will be managed by CustomersDot 
1. CustomersDot will trigger the creation of a Zuora subscription amendment for additional users
1. Where a default credit card is stored in Zuora, CustomersDot will attempt to charge the credit card at the time of processing the additional users amendment. 
1. Where a default credit card is not available or the charge described above was declined, CustomersDot will trigger the creation of an invoice record in Zuora and trigger mailing to customer for payment.
1. The process runs at the beginning of the subscription quarter
    1. Example, if the subscription term is 2021-02-01 - 2022-01-31, the first Quarterly coterm process will run on 2021-05-01
1. Conducted in subscription quarters 1-3
    1. User overages incurred in the 4th quarter of a subscription will not be charged to the customer
1. Overages are booked at effective price (current subscription rate)
1. Overage is determined by comparing Max User count to subscribed user quantity
     1. The Max User count is obtained via the [Seat Link service](https://docs.gitlab.com/ee/subscriptions/self_managed/#seat-link)
1. Additional users co-terminate with subscription end date
1. There is no historical chargeback for overage
1. The additional users are provisioned automatically 
1. A SFDC opportunity for the additional users will be created (Closed Won)
1. The SFDC `License Usage` object will reflect the updated amount of users in the subscription
1. Quarterly Coterms process will not run for: Partner deals, Community Program partipants (EDU, OSS, YCombinator), subscriptions with term length other than 12 months.

## Data Reference

1. Cloud License Activation: https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/staging/doc/proposal_cloud_license.md#data-structures
1. Quarterly Coterm reconciliation reference: https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/staging/doc/reconciliations.md

## General Reference

1. 

## Open Questions

1. [ ] Will we create a hard requirement (of the customer) to always keep their instance connected to the internet?
     1. As an example, we could enforce the connection by removing paid features after _n days_ without syncing to GitLab
1.