##### Quality

- Quad Planning & Coverage
  - Own [quad planning](https://about.gitlab.com/handbook/engineering/quality/qe-subdept/quad-planning/) efforts and proactively optimize test coverage.
  - Create test strategy and implement test automation for new features.
  - Coach other Software Engineers in Test in effective and thoughtful test planning methods.
  - Proactively manage the competing priorities and potential collisions of concurrent projects to reduce risk, increase test coverage, and leverage efficiency gains in overlapping testing activities.
  - Identify and design potential new test frameworks, demonstrate their value, and implement in collaboration with other Software Engineers in Test.
  - Provide risk analysis and input on test strategy, refine tests at all levels to ensure efficient coverage and effective deduplication, and steer the team to optimal test coverage.
- Test Stability & Triage
  - Proactively manage triage and test pipeline stabilization activities.
  - Participate in test pipeline on-call rotation and ensure that pipeline failures are triaged, addressed and communicated in a timely manner. 
  - Take ownership of unquarantining flaky tests. Help debug failures to unblock the current on-call engineers.
  - Work wth Infrastructure and the counterpart stage to address test failures related to test environments or bugs in code.
  - Proactively identify and implement improvements to our process and test architecture to improve stability and reduce flakiness.
- Test Tooling
  - Lead test automation infrastructure implementation across multiple product areas in collaboration with stage group, functional area counterparts and Quality Department team members. 
  - Work across departments to identify, plan, and execute improvements/refinements.
- Test Environments
  -  Setup and maintain new GitLab test environments for your stable counterpart group. 
  - Leverage provisioning technologies (e.g. Omnibus, the Orchestrator, Terraform, Ansible, Kubernetes, Helm Charts, GCP, or AWS) and work with infrastructure and distribution teams as needed.
- Task Management & OKRs
  - Work on complex department initiatives that have an impact on the company's bottom line.
  - Owns an OKR.
  - Define and independently manages multiple projects within the department.
  - Able to create new methods for obtaining results. <br/> * Analyze engineering metrics and make suggestions to improve engineering processes and velocity.
  - Contributes to working groups as a Quality lead.
- Knowledge Sharing
  - Clearly document, review, and broadly share our process and knowledge. This could be across mediums (recorded videos, written artifacts) and may include activities like:
    - Regularly authoring and reviewing new content from the department to the company blog and handbook.
    - Recording demos and walk-throughs. 
    - Mentoring other engineers.
    - Participating in customer calls and taking part in Engineering outreach.
    - Hosting AMAs or office hours.
    - Speaking at conferences or meet-ups.
- Domain specific expertise
  - Demonstrate domain specific responsibilities within their assigned product group.
