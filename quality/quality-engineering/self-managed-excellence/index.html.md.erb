---
layout: handbook-page-toc
title: "Self-Managed Excellence"
description: "This page lists more details about Self-Managed Excellence initiatives"
---

{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

## Overview

This page provides more detail about Self-Managed Excellence initiatives.

Quality Engineering owns several tools which form a 3-prong trident for Self-Managed Excellence: the [GitLab Environment Toolkit (GET)](https://gitlab.com/gitlab-org/gitlab-environment-toolkit), the [GitLab Performance Tool (GPT)](https://gitlab.com/gitlab-org/quality/performance), and the [Reference Architectures (RA)](https://docs.gitlab.com/ee/administration/reference_architectures/). Together, these tools support our broader strategy of cementing customer confidence and contributing to their ongoing success by ensuring their instances are built to a rigorously tested standard that performs smoothly at scale.

```mermaid
flowchart LR
  subgraph selfManageExcel["Self-Managed Excellence"]
    GET["GitLab Environment Toolkit (GET)"]
    GPT["GitLab Performance Tool (GPT)"]
    RA("Reference Architectures (RA)")
  end
  style selfManageExcel fill:#FFF
  style GET color:#6b4fbb, stroke:#9370DB
  style GPT color:#6b4fbb, stroke:#9370DB
  style RA color:#6b4fbb, stroke:#9370DB
  click GET "https://gitlab.com/gitlab-org/gitlab-environment-toolkit" _blank
  click GPT "https://gitlab.com/gitlab-org/quality/performance" _blank
  click RA "https://docs.gitlab.com/ee/administration/reference_architectures/" _blank
```

- Expanding GitLab Environment Toolkit (GET), our established provisioning toolkit.
- Expanding GitLab Performance Tool (GPT), our performance testing tool for validation at scale.
- Maturing Reference Architectures (RA), our guidelines for ensuring performant environments.

[Self-Managed Excellence dashboard](https://app.periscopedata.com/app/gitlab/1101145/Self-Managed-Excellence-metrics)
tracks merge requests and issues metrics for GitLab Environment Toolkit, GitLab Performance Tool and Reference Architectures projects.

## GitLab Environment Toolkit

Quality Engineering is currently building and maintaining the [GitLab Environment Toolkit](https://gitlab.com/gitlab-org/gitlab-environment-toolkit) (GET),
which is a collection of tools to deploy and operate production GitLab instances based on our [Reference Architectures](https://docs.gitlab.com/ee/administration/reference_architectures/).

### FY23 Direction

In FY23 we're focusing on achieving Viable maturity status for GET in both functional and UX terms. In particular our goals include making the following additions:

- GCP
  - Google Cloud SQL support (including Read Replicas)
  - Google Cloud Load Balancer support
  - GKE Regional Cluster support
  - Dedicated Service Account support
- AWS
  - RDS Read Replica support
  - S3 Lifecycle Support
- OpenSearch support
- Proxy support
- Additional support for more advanced Geo setups such as cross VPC support
- Documentation of Cloud Provider permission requirements

### Metrics

<% if ENV['PERISCOPE_EMBED_API_KEY'] %>
  <div>
    <embed width="100%" height="100%" style="min-height:300px;" src="<%= signed_periscope_url({ chart: 15914946, dashboard: 1101145, embed: "v2"}) %>">
  </div>
  <% else %>
    <p>You must set a <code>PERISCOPE_EMBED_API_KEY</code> environment variable to render this chart.</p>
<% end %>

<% if ENV['PERISCOPE_EMBED_API_KEY'] %>
  <div>
    <embed width="100%" height="100%" style="min-height:300px;" src="<%= signed_periscope_url({ chart: 15921561, dashboard: 1101145, embed: "v2"}) %>">
  </div>
  <% else %>
    <p>You must set a <code>PERISCOPE_EMBED_API_KEY</code> environment variable to render this chart.</p>
<% end %>

<% if ENV['PERISCOPE_EMBED_API_KEY'] %>
  <div>
    <embed width="100%" height="100%" style="min-height:300px;" src="<%= signed_periscope_url({ chart: 15921831, dashboard: 1101145, embed: "v2"}) %>">
  </div>
  <% else %>
    <p>You must set a <code>PERISCOPE_EMBED_API_KEY</code> environment variable to render this chart.</p>
<% end %>

## Reference Architectures

Quality Engineering is the part of Reference Architecture group which maintains and reviews [Reference Architectures](https://docs.gitlab.com/ee/administration/reference_architectures/).

### FY23 Direction

In FY23 we're focusing on enabling self-service approach for Reference Architecture reviews:

- Restructure Reference Architecture reviews approach to a self-service first model - [epic#40](https://gitlab.com/groups/gitlab-org/quality/-/epics/40).

## GitLab Performance Tool

Quality Engineering is currently building and maintaining the [GitLab Performance Tool](https://gitlab.com/gitlab-org/quality/performance) (GPT),
which is used to validate GitLab performance at scale. More information is available on [Performance and Scalability](/handbook/engineering/quality/performance-and-scalability/) page.

### Direction

We're aiming to release GitLab Performance Tool which will streamline and
improve test data setup and testing experience:

- GitLab Performance Tool v3.0.0 - [epic#4300](https://gitlab.com/groups/gitlab-org/-/epics/4300)

### Metrics

<% if ENV['PERISCOPE_EMBED_API_KEY'] %>
  <div>
    <embed width="100%" height="100%" style="min-height:300px;" src="<%= signed_periscope_url({ chart: 15914977, dashboard: 1101145, embed: "v2"}) %>">
  </div>
  <% else %>
    <p>You must set a <code>PERISCOPE_EMBED_API_KEY</code> environment variable to render this chart.</p>
<% end %>

<% if ENV['PERISCOPE_EMBED_API_KEY'] %>
  <div>
    <embed width="100%" height="100%" style="min-height:300px;" src="<%= signed_periscope_url({ chart: 15946692, dashboard: 1101145, embed: "v2"}) %>">
  </div>
  <% else %>
    <p>You must set a <code>PERISCOPE_EMBED_API_KEY</code> environment variable to render this chart.</p>
<% end %>

## Self-Managed Environment Triage

There is a bi-weekly self-managed environment triage meeting involving various team members from the Enablement section, Support, Customer Success, and Technical Writing, which focuses on the following:
* Triaging customers and prospects that are setting up new environments or migrating existing environments in line with our reference architectures.
* Additions to or refinements of the reference architecture specs and documentation.

For more information, please see the [Self-Managed Environment Triage board](https://gitlab.com/groups/gitlab-org/-/boards/1131633) and the [Self-Managed Environment Triage agenda](https://docs.google.com/document/d/1FpXtHlIEKNuTCooUn5MxlMvkNvml5UWeBNRHCcDfMrA/edit) (internal only). To be added to the meetings, please reach out to the Quality Engineering Manager, Enablement.

## How to Engage with Us

There are occasions where the expertise of the Self-Managed Environment Triage Group may be needed in support of a customer issue. When this does occur, the appropriate method of requesting our engagement is by opening an issue in the related project ([Reference Architectures](https://gitlab.com/gitlab-org/quality/reference-architectures/-/issues/new), [GitLab Environment Toolkit](https://gitlab.com/gitlab-org/gitlab-environment-toolkit/-/issues/new), or [GitLab Performance Tool](https://gitlab.com/gitlab-org/quality/performance/-/issues/new)). This process allows us to track time involved and ensure that the right parties are involved at the correct time.

Requests should be opened two or more business days before action is needed to ensure the team has time to prepare.

For individual questions please reach out to the group via our slack channels. 

### Slack Channels

| Channel | Purpose |
| :---: | :--- |
| [#reference-architectures](https://gitlab.slack.com/archives/C015V8PDUSW) | Channel to ask questions relating to Reference Architectures |
| [#gitlab_environment_toolkit](https://gitlab.slack.com/archives/C01DE8TA545) | Channel to discuss and any ask questions relating to GitLab Environment Toolkit |
| [#gitlab_performance_tool](https://gitlab.slack.com/archives/C02JMABFT2R) | Channel to discuss and ask any questions relating to GitLab Performance Tool and QE performance testing |
