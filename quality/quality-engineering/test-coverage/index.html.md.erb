---
layout: handbook-page-toc
title: "Test Coverage"
description: "The Quality Department has coverage to support testing particular scenarios."
---

## On this page
{:.no_toc .hidden-md .hidden-lg}

- TOC
{:toc .hidden-md .hidden-lg}

### Offline Airgapped GitLab QA scenario

The Quality Department has a GitLab QA scenario that supports offline or air-gapped testing.
We also have other resources for offline testing.
The [scenario](https://gitlab.com/gitlab-org/gitlab-qa/-/blob/master/lib/gitlab/qa/scenario/test/instance/airgapped.rb) `Test::Instance::Airgapped` is part of [GitLab QA](https://gitlab.com/gitlab-org/gitlab-qa/-/blob/master/docs/what_tests_can_be_run.md#testinstanceairgapped)
test scenarios. It installs and uses `iptables` on the test instance to drop traffic other 
than specific ports which allow our test access to the test instance.

#### Test run schedule

This is triggered on the [Nightly build](https://gitlab.com/gitlab-org/quality/pipeline-common/-/blob/master/ci/nightly/qa.gitlab-ci.yml#L181),
where [smoke tests](https://docs.gitlab.com/ee/development/testing_guide/smoke.html) for CE and EE are executed. Results of the Nightly pipeline
can be found in the generated [Allure report](https://storage.googleapis.com/gitlab-qa-allure-reports/nightly/master/index.html),
where test states such as failures can be filtered on.
Nightly pipelines are visible at the
[Nightly Pipelines](https://gitlab.com/gitlab-org/quality/nightly/-/pipelines?page=1&scope=all&username=gitlab-bot) page (internal only).
The offline airgapped smoke test job names are `ce:airgapped-smoke` and `ee:airgapped-smoke`.
This is one of the [pipelines monitored by the Quality Engineering team](/handbook/engineering/quality/quality-engineering/debugging-qa-test-failures/#qa-test-pipelines) as part of the 
[Quality Department pipeline triage on-call rotation](/handbook/engineering/quality/quality-engineering/oncall-rotation/).

#### Other reference guides

Secure stage has additional testing to test that analyzers can execute in an offline fashion.
More information on [secure tests](https://gitlab.com/gitlab-org/security-products/tests/common/-/blob/master/README.md#known-testing-branches)(internal only).

Otherwise for setting up an offline environment for testing, the [Getting started with an offline GitLab Installation](https://docs.gitlab.com/ee/topics/offline/quick_start_guide.html) guide can be followed.
Instructions for working with secure scanners can be found in the [Offline environments](https://docs.gitlab.com/ee/user/application_security/offline_deployments/) guide.
